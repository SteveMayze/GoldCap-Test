
GoldCapBoardVerification.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000007a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800040  00800040  000000ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000ce  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000100  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000013c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000059f  00000000  00000000  0000015c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000504  00000000  00000000  000006fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000255  00000000  00000000  00000bff  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000e54  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000313  00000000  00000000  00000e78  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  0000118b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000011d3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	10 c0       	rjmp	.+32     	; 0x22 <__ctors_end>
   2:	17 c0       	rjmp	.+46     	; 0x32 <__bad_interrupt>
   4:	16 c0       	rjmp	.+44     	; 0x32 <__bad_interrupt>
   6:	15 c0       	rjmp	.+42     	; 0x32 <__bad_interrupt>
   8:	14 c0       	rjmp	.+40     	; 0x32 <__bad_interrupt>
   a:	13 c0       	rjmp	.+38     	; 0x32 <__bad_interrupt>
   c:	12 c0       	rjmp	.+36     	; 0x32 <__bad_interrupt>
   e:	11 c0       	rjmp	.+34     	; 0x32 <__bad_interrupt>
  10:	10 c0       	rjmp	.+32     	; 0x32 <__bad_interrupt>
  12:	0f c0       	rjmp	.+30     	; 0x32 <__bad_interrupt>
  14:	0e c0       	rjmp	.+28     	; 0x32 <__bad_interrupt>
  16:	0d c0       	rjmp	.+26     	; 0x32 <__bad_interrupt>
  18:	0c c0       	rjmp	.+24     	; 0x32 <__bad_interrupt>
  1a:	0b c0       	rjmp	.+22     	; 0x32 <__bad_interrupt>
  1c:	0a c0       	rjmp	.+20     	; 0x32 <__bad_interrupt>
  1e:	09 c0       	rjmp	.+18     	; 0x32 <__bad_interrupt>
  20:	08 c0       	rjmp	.+16     	; 0x32 <__bad_interrupt>

00000022 <__ctors_end>:
  22:	11 27       	eor	r17, r17
  24:	1f bf       	out	0x3f, r17	; 63
  26:	cf eb       	ldi	r28, 0xBF	; 191
  28:	d0 e0       	ldi	r29, 0x00	; 0
  2a:	de bf       	out	0x3e, r29	; 62
  2c:	cd bf       	out	0x3d, r28	; 61
  2e:	02 d0       	rcall	.+4      	; 0x34 <main>
  30:	22 c0       	rjmp	.+68     	; 0x76 <_exit>

00000032 <__bad_interrupt>:
  32:	e6 cf       	rjmp	.-52     	; 0x0 <__vectors>

00000034 <main>:
			PB1 TPI Data
			PB2 LED_PB2 (8)
			PB3 ~RESET

	*/
	DDRA |= ( 0x7F << PORTA0 );
  34:	41 b1       	in	r20, 0x01	; 1
  36:	4f 67       	ori	r20, 0x7F	; 127
  38:	41 b9       	out	0x01, r20	; 1
	DDRA |= ( 0x00 << PORTA7 ); // Set port A7 as Input
  3a:	41 b1       	in	r20, 0x01	; 1
  3c:	41 b9       	out	0x01, r20	; 1
	DDRB |= ( 1 << PORTB2);
  3e:	2a 9a       	sbi	0x05, 2	; 5


	while (1) 
    {
		PORTA |= (0x7F << PORTA0 );
  40:	42 b1       	in	r20, 0x02	; 2
  42:	4f 67       	ori	r20, 0x7F	; 127
  44:	42 b9       	out	0x02, r20	; 2
		PORTB |= ( 0x01 << PORTB2 );
  46:	32 9a       	sbi	0x06, 2	; 6
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  48:	4f e3       	ldi	r20, 0x3F	; 63
  4a:	5d e0       	ldi	r21, 0x0D	; 13
  4c:	63 e0       	ldi	r22, 0x03	; 3
  4e:	41 50       	subi	r20, 0x01	; 1
  50:	50 40       	sbci	r21, 0x00	; 0
  52:	60 40       	sbci	r22, 0x00	; 0
  54:	e1 f7       	brne	.-8      	; 0x4e <__SREG__+0xf>
  56:	00 c0       	rjmp	.+0      	; 0x58 <__SREG__+0x19>
  58:	00 00       	nop
		_delay_ms(1000);
		PORTA &= ~(0x7F << PORTA0 );
  5a:	42 b1       	in	r20, 0x02	; 2
  5c:	40 78       	andi	r20, 0x80	; 128
  5e:	42 b9       	out	0x02, r20	; 2
		PORTB &= ~( 0x01 << PORTB2 );
  60:	32 98       	cbi	0x06, 2	; 6
  62:	4f e3       	ldi	r20, 0x3F	; 63
  64:	5d e0       	ldi	r21, 0x0D	; 13
  66:	63 e0       	ldi	r22, 0x03	; 3
  68:	41 50       	subi	r20, 0x01	; 1
  6a:	50 40       	sbci	r21, 0x00	; 0
  6c:	60 40       	sbci	r22, 0x00	; 0
  6e:	e1 f7       	brne	.-8      	; 0x68 <__SREG__+0x29>
  70:	00 c0       	rjmp	.+0      	; 0x72 <__SREG__+0x33>
  72:	00 00       	nop
  74:	e5 cf       	rjmp	.-54     	; 0x40 <__SREG__+0x1>

00000076 <_exit>:
  76:	f8 94       	cli

00000078 <__stop_program>:
  78:	ff cf       	rjmp	.-2      	; 0x78 <__stop_program>
